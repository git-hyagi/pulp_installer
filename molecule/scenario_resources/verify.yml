---
# This is an example playbook to execute testinfra tests.
# Tests need distributed to the appropriate ansible host/groups
# prior to execution by `py.test`.

- name: Verify
  hosts: all
  become: true
  vars:
    testinfra_bin: "{{ pulp_install_dir }}/bin/py.test"
    testinfra_test_directory: /tmp/molecule/testinfra
  tasks:
    - name: Install testinfra
      pip:
        name: pytest-testinfra
        state: present
        virtualenv: '{{ pulp_install_dir }}'
        virtualenv_command: '{{ pulp_python_interpreter }} -m venv'

    - name: Install iproute (needed for socket connection tests) on Red Hat based systems
      package:
        name: iproute
        state: present
      when:
        - ansible_os_family == "RedHat"

    - name: Install iproute2 and curl on Debian based systems
      package:
        name: "{{ item }}"
        state: present
      when:
        - ansible_os_family == "Debian"
      with_items:
        - curl
        - iproute2

    - name: Create testinfra directory for test files
      file:
        path: "{{ testinfra_test_directory }}"
        state: directory

    - name: Copy testinfra tests to remote
      copy:
        src: "{{ item }}"
        dest: "{{ testinfra_test_directory }}/{{ item | basename }}"
      register: copy_testinfra_tests
      with_fileglob:
        - "{{ lookup('env', 'MOLECULE_VERIFIER_TEST_DIRECTORY') }}/testinfra_*.py"

    - name: Execute testinfra tests
      command: "{{ testinfra_bin }} {{ item.dest }}"
      register: test_results
      with_items: "{{ copy_testinfra_tests.results }}"
      changed_when: test_results.changed
      ignore_errors: true

    - name: Display details about the testinfra results
      debug:
        msg: "{{ item.stdout_lines }}"
      with_items: "{{ test_results.results }}"

    - name: Fail when tests fail
      fail:
        msg: "testinfra failed to validate"
      when: item.rc != 0
      with_items: "{{ test_results.results }}"

    - name: Install dependency for RAM usage check (RedHat)
      yum:
        name: procps-ng
        state: present
      when: ansible_facts.os_family == 'RedHat'

    - name: Install dependency for RAM usage check (Debian)
      apt:
        name: procps
        state: present
      when: ansible_facts.os_family == 'Debian'

    - name: Check RAM usage
      command: free -m
      changed_when: false
      register: result

    - name: Show RAM usage, so we know if our CI env is low on RAM
      debug: var=result.stdout_lines
